//sample db file
<xml version="1.0" encoding="UTF-8"?>
<statments>
    <statement>CREATE TABLE IF NOT EXISTS Test(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, data TEXT)</statement>    
</statments>

//Database initialization
db_init('test1', 'db/build.xml'); //dbname, relative path to xml file

//query database - success callback same as jquery.ajax
db_query('INSERT INTO Test (data) values ("' + $('#itemName').val() + '")', {
	success: function(tx, results) {
			
	}
}); 


//connection status
var conn = conn_status();

//status json object
var status = {
	available: false,
	type: Connection.NONE,
	gtype: Connection.NONE,
	label: 'No network connection'
};

/****filesystem.js**************************************************************************
* No need to initilize, it does so automatically as a singleton on each method call
********************************************************************************************/
//Moving a file
responseString = fs_moveFile(oldfileURI, path, newfilename);
//will return the new location URI if successful, returns 0 if not
alert(responseString);

//delete file
responseString = fs_deleteFile(fileURI);
//will return a 1 if successful, 0 if not
alert(responseString);


/****camera.js******************************************************************************
* No need to initilize, camera object is initilized and destroyed on a single action call
* cam_options can be overwritten, look at http://docs.phonegap.com/en/2.5.0/cordova_camera_camera.md.html
* for other optional parameters
********************************************************************************************/
//camera options
cam_options = {
	quality: 50,
	destinationType: 1, //0=base64data, 1=fileURI
	sourceType: 1, // 0=photolibrary, 1=camera, 2=photoalbum. 0=2 on android.
	correctOrientation: true, //true or false
	encodingType: 0 //0=jpg, 1=png
};

//set camera options
cam_config(cam_options);

//take picture
//async best practices show to go the non-blocking route by sending the function a callback 
//function as a parameter rather than wait on a return variable

//assign actions
function onDeviceReady() {
	$('#takePhotoButton').click(function(){
		cam_getPhoto(doSomethingWithPhoto);
	});
}
//callback function passed to cam_getPhoto
function doSomethingWithPhoto(cam_result){
	if (cam_result != 0){
		//do something with the URI in the dom, attach img, etc	
	}
}
